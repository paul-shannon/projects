q()
dir()
packageVersion("httpuv")
q()
library(igvR)
packageVersion("httpuv")
igv <- igvR(quiet=FALSE)
q()
library(igvR); packageVersion("httpuv")
igv <- igvR(quiet=FALSE)
q()
packageVersion("httpuv")
q()
packageVersion("httpuv")
tbl.snps
tbl.snps
?igvR
?dbConnect
grep("placental", tbl.dbs, v=TRUE)
grep("placental", tbl.dbs, v=TRUE, ignore.case=TRUE)
grep("embryonic", tbl.dbs, v=TRUE, ignore.case=TRUE)
tbl.dbs
class(dbGetQuery(db, "select datname from pg_database"))
colnames(dbGetQuery(db, "select datname from pg_database"))
head(dbGetQuery(db, "select datname from pg_database")$datname)
dboi
doib
dboi
db.h16
args(dbConnect)
dbListTables(db.h16)
getGenomicRegion(igv)
)
queryString
queryString
dim(tbl.h16)
head(tbl.h16)
head(tbl.h16.regions$loc)
dbGetQuery(db.h16, "select * from hits where loc='chr13:28494431-28494439'")
getHits <- function(db, chrom, start, stop)
{
    query.p0 <- "select loc, chrom, start, stop from regions"
    query.p1 <- sprintf("where chrom='%s' and start > %d and stop < %d", chrom, start, stop)
    query.regions <- paste(query.p0, query.p1)
    tbl.regions <- dbGetQuery(db, query.regions)
    if(nrow(tbl.regions) == 0)
       return data.frame()
    loc.set <- sprintf("('%s')", paste(tbl.regions$locs, collapse="','"))
    query.hits <- "select * from hits where loc in %s"
    tbl.hits <- dbGetQuery(db, query.hits)
}

getHits <- function(db, chrom, start, stop)
{
    query.p0 <- "select loc, chrom, start, stop from regions"
    #query.p1 <- sprintf("where chrom='%s' and start > %d and stop < %d", chrom, start, stop)
    #query.regions <- paste(query.p0, query.p1)
    #tbl.regions <- dbGetQuery(db, query.regions)
    #if(nrow(tbl.regions) == 0)
    #   return data.frame()
    #loc.set <- sprintf("('%s')", paste(tbl.regions$locs, collapse="','"))
    #query.hits <- "select * from hits where loc in %s"
    #tbl.hits <- dbGetQuery(db, query.hits)
}

getChromosomalRegion(igv)
getGenomicRegion(igv)
roi <- getGenomicRegion(igv); tbl.h16.fp <- with(roi, getHits(db.h16, chrom, start, end))
roi <- getGenomicRegion(igv); tbl.h16.fp <- with(roi, getHits(db.h16, chrom, start, end))
roi
dbGetQuery(db.h16, "select * from regions where chrom='chr13' and start > 28343531 and endpos < 28785898")
tbl.regions <- dbGetQuery(db.h16, "select * from regions where chrom='chr13' and start > 28343531 and endpos < 28785898")
n
n
n
query.regions
dim(tbl.regions)
n
n
n
nchar(loc.set)
loc.set
head(tbl.regions)
x <- dbGetQuery(db, query.hits)
c
c
c
c
c
c
dim(x)
c
dim(x)
c
x
dim(x)
c
dim(x)
c
dim(x)
c
dim(x)
x
q <- "select * from regions r inner join hits h on r.loc = h.loc where r.chrom='chr13' and r.start > 28564398 and r.end < 28564496"
dbGetQuery(db.h16, q)
dbGetQuery(db.h16, q)
3
library(igvR)
sessionInfo()
 igv <- igvR()
library(igvR)
igv <- igvR()
end - start
x <- list()
x["aaa"] <- letters
x[["aaa"]] <- letters
x[["bbb"]] <- LETTERS
x
lapply(fps, dim)
head(fps[[1]])
tbl.fp <- do.call(rbind, fps)
dim(tbl.fp)
length(gr.fp)
length(union(gr.fp))
length(reduce(gr.fp))
length(gr.fp.reduced)
as.data.frame(gr.fp.reduced)
head(as.data.frame(gr.fp.reduced))
args(GRangesAnnotationTrack)
end - start
dim(tbl.dhs)
head(tbl.dhs)
plot(tbl.dhs$count, tbl.dhs$score)
length(gr.dhs)
length(gr.hdsfp)
length(gr.dhsfp)
dir("..")
class(ftl1.enhancer)
dim(ftl1.enhancer)
head(tbl.enhancer)
 gr.enhancer
 gr.enhancer
length(gr.hdsfp)
length(gr.dhsfp)
head(as.data.frame(gr.dhsfp))
head(tbl.dhsfp.regions)
dim(tbl.motifs.dhsfp)
head(tbl.motifs.dhsfp)
length(shortMotifNames)
fivenum(with(tbl.motifs.dhsfp, 1+motifEnd-motifStart)))
fivenum(with(tbl.motifs.dhsfp, 1+motifEnd-motifStart))
colnames(tbl.motifs.dhsfp)
wdth(150)
colnames(tbl.motifs.dhsfp)
dim(x)
colnames(x)
table(x$geneSymbol)
as.data.frame(sort(table(x$geneSymbol), decreasing=TRUE))
grep("geneSymbol", colnames(x))
colnames(x)[grep("geneSymbol", colnames(x))] <- mdb.geneSymbol
colnames(x)[grep("geneSymbol", colnames(x))] <- "mdb.geneSymbol"
grep("pubmedID", colnames(x)
)
as.data.frame(sort(table(y$mdb.geneSymbol), decreasing=TRUE))
head(as.data.frame(sort(table(y$mdb.geneSymbol), decreasing=TRUE)), n=10)
head(as.data.frame(sort(table(x$mdb.geneSymbol), decreasing=TRUE)), n=10)
head(x)
head(as.data.frame(sort(table(x$mdb.geneSymbol), decreasing=TRUE)), n=10)
head(tbl.mdbFreq, n=30)
head(tbl.tfcFreq, n=30)
length(intersect(mdb.top.30, tfc.top.30)
)
intersect(mdb.top.30, tfc.top.30)
wdth(120)
intersect(mdb.top.30, tfc.top.30)
"YY1" %in% tbl.tfcFreq$Var1
tbl.tfcFreq
length(tfoi)
length(tfoi.mdb); length(tfoi.tfc)
dim(x); dim(y)
length(unique(x$mdb.geneSymbol))
length(unique(y$tfc.geneSymbol))
wdth(600)
head(x, n=100)
colnames(x)
wdth(400)
colnames(x)
wdth(200)
colnames(x)
wdth(300)
colnames(x)
wdth(280)
colnames(x)
grep("seq", colnames(x))
head(x[, -11])
head(x[, -11], n=30)
head(y[, -11], n=30)
length(y$tfc.geneSymbol)
length(unique(y$tfc.geneSymbol))
length(unique(intersect(y$tfc.geneSymbol, x$mdb.geneSymbol)))
head(tbl.tfcFreq)
dim(tbl.tfcFreq)
dim(x)
length(unique(x$shortMotif))
length(unique(x$motifName))
length(unique(y$motifName))
length(unique(y$shortMotif))
motifToGene(MotifDb, unique(y$shortMotif), source="TFclass))
)
)
motifToGene(MotifDb, unique(y$shortMotif), source="TFclass"))
motifToGene(MotifDb, unique(y$shortMotif), source="TFclass")
dim(motifToGene(MotifDb, unique(y$shortMotif), source="TFclass"))
length(motifToGene(MotifDb, unique(y$shortMotif), source="TFclass")$geneSymbol)
length(unique(motifToGene(MotifDb, unique(y$shortMotif), source="TFclass")$geneSymbol))
length(unique(motifToGene(MotifDb, unique(x$motifName), source="MotifDB")$geneSymbol))
head(x$motifName)
length(unique(motifToGene(MotifDb, unique(x$shortMotif), source="MotifDB")$geneSymbol))
length((motifToGene(MotifDb, unique(x$shortMotif), source="MotifDB")$geneSymbol))
dim(x)
length((motifToGene(MotifDb, unique(x$motifName), source="MotifDB")$geneSymbol))
head(x)
head(x[, c("motifName", "shortMotif", "mdb.geneSymbl")])
head(x[, c("motifName", "shortMotif", "mdb.geneSymbol")])
grep "TCF7L", tfoi.mdb, v=TRUE)
grep("TCF7L", tfoi.mdb, v=TRUE)
grep("geneSymbol.mdb", colnames(x))
grep("mdb.geneSymbol", colnames(x))
dim(tbl.geneModel.mdb)
(tbl.geneModel.mdb)
subset(x, geneSybmol == "BHLHE40")
subset(x, geneSymbol == "BHLHE40")
subset(x, geneSymbol == "YY1")
tbl.geneModel.mdb
tfs <- tbl.geneModel.mdb$gene
tfs
subset(x, geneSymbol==tfs[1])$shortMotif
unique(subset(x, geneSymbol==tfs[1])$shortMotif)
mdb.h18 <- query(query(MotifDb, "sapiens"), "jaspar2018")
query(mdb.h18, "MA0464.2")
dim(tbl.motifs)
head(tbl.motifs)
print(load("tbl.model.enhancerAll.mdb.RData"))
dim(tbl.model.enhancerAll.mdb)
(tbl.model.enhancerAll.mdb)
q()
source("buildModels.R")
deleteTracksOfSameName
track
Q
q()
source("buildModels.R")
?message
q()
